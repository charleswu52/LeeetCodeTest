package leetcode_hot100.top60;

/**
 * @author WuChao
 * @create 2021/7/14 10:44
 */
public class _136 {
    /**
     * Leetcode 热题 Top 100
     * <p>
     * 136. 只出现一次的数字
     * 难度：easy
     * <p>
     * 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
     * <p>
     * 说明：
     * <p>
     * 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
     * 示例 1:
     * <p>
     * 示例 1:
     * 输入: [2,2,1]
     * 输出: 1
     * <p>
     * 示例 2:
     * 输入: [4,1,2,1,2]
     * 输出: 4
     * <p>
     * 数据范围:
     */

    /*
    题目解析：
    题目不难可以有多种解决方法，比如哈希表等，但是要求在O(n)时间复杂度和O(1)的空间复杂度的话需要考虑位运算

    思路：异或
    两个相同数字异或运算的结果是0，所以数组中全部数字异或的结果即为那个只出现一次的数
     */
    public int singleNumber(int[] nums) {
        int res = 0;
        for (int num : nums) {
            res ^= num;
        }
        return res;
    }


}

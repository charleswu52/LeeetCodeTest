package leetcode_everyday._2022.Jan;

/**
 * @author WuChao
 * @create 2022/1/22 10:21
 */
public class _22_1332 {
    /**
     * 每日一题：2022/1/22
     * <p>
     * 1332. 删除回文子序列
     * <p>
     * 难度：easy
     * <p>
     * 给你一个字符串 s，它仅由字母 'a' 和 'b' 组成。每一次删除操作都可以从 s 中删除一个回文 子序列。
     * <p>
     * 返回删除给定字符串中所有字符（字符串为空）的最小删除次数。
     * <p>
     * 「子序列」定义：如果一个字符串可以通过删除原字符串某些字符而不改变原字符顺序得到，那么这个字符串就是原字符串的一个子序列。
     * <p>
     * 「回文」定义：如果一个字符串向后和向前读是一致的，那么这个字符串就是一个回文。
     * <p>
     * 示例 1：
     * <p>
     * 输入：s = "ababa"
     * 输出：1
     * 解释：字符串本身就是回文序列，只需要删除一次。
     * <p>
     * 范围
     * <p>
     * 1 <= s.length <= 1000
     * s 仅包含字母 'a'  和 'b'
     */

    /*
    思路：
    仔细读懂题目并且根据题目的范围，可以发现字符串只包含a b，而且是要删除回文串序列而不是子串，因此总是可以在两步之内完成删除
    因此先判断给定的字符串是不是回文串，是就可以一次删除，不是就需要两次
    因此问题就变成了判断一个字符串是否是 回文串 的题目
    */
    public int removePalindromeSub(String s) {
        int n = s.length();
        for (int i = 0, j = n - 1; i <= j; i++, j--) {
            if (s.charAt(i) != s.charAt(j)) {
                return 2;
            }
        }
        return 1;
    }
}

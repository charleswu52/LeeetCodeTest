package leetcode_everyday._2022.Jan;

/**
 * @author WuChao
 * @create 2022/1/2 上午10:41
 */
public class _2_390 {
    /**
     * 每日一题：2022/1/2
     * <p>
     * 390. 消除游戏
     * <p>
     * 难度：medium
     * <p>
     * 列表 arr 由在范围 [1, n] 中的所有整数组成，并按严格递增排序。请你对 arr 应用下述算法：
     * <p>
     * 从左到右，删除第一个数字，然后每隔一个数字删除一个，直到到达列表末尾。
     * 重复上面的步骤，但这次是从右到左。也就是，删除最右侧的数字，然后剩下的数字每隔一个删除一个。
     * 不断重复这两步，从左到右和从右到左交替进行，直到只剩下一个数字。
     * 给你整数 n ，返回 arr 最后剩下的数字。
     *
     * <p>
     * 示例 1：
     * <p>
     * 输入：n = 9
     * <p>
     * 输出：6
     * <p>
     * 解释：
     * arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
     * arr = [2, 4, 6, 8]
     * arr = [2, 6]
     * arr = [6]
     * <p>
     * 示例 2：
     * <p>
     * 输入：n = 1
     * <p>
     * 输出：1
     * <p>
     * 范围
     * <p>
     * 1 <= n <= 10^9
     **/

    /*
    思路：如果按照 题目要求暴力来做的话肯定是不行的 超时
    思考数学思路：
    从左往右消除，起点肯定会改变；从右往左消除，偶数时候起点不改变，奇数时候会改变。start表示从左->右开始删除的开头，step表示删除的间隔。
     */
    public int lastRemaining(int n) {
        if (n == 1) {
            return n;
        }
        // 从 左 到 右 删除的开始值
        int start = 1;
        // 步长
        int step = 1;
        // 判断是否是从左到右
        boolean flag = true;
        while (n > 1) {
            // 从左到右删除 或者 奇数个时 起点会改变
            if (flag || (n & 1) == 1) {
                start += step;
            }
            // 长度减半
            n = n >> 1;
            step = step << 1;
            flag = !flag;
        }
        return start;
    }
}

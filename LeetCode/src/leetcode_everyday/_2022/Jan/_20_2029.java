package leetcode_everyday._2022.Jan;

/**
 * @author WuChao
 * @create 2022/1/20 10:56
 */
public class _20_2029 {
    /**
     * 每日一题：2022/1/20
     * <p>
     * 2029. 石子游戏 IX
     * <p>
     * 难度：mdeium
     * <p>
     * Alice 和 Bob 再次设计了一款新的石子游戏。现有一行 n 个石子，每个石子都有一个关联的数字表示它的价值。
     * 给你一个整数数组 stones ，其中 stones[i] 是第 i 个石子的价值。
     * <p>
     * Alice 和 Bob 轮流进行自己的回合，Alice 先手。每一回合，玩家需要从 stones 中移除任一石子。
     * <p>
     * 如果玩家移除石子后，导致 所有已移除石子 的价值 总和 可以被 3 整除，那么该玩家就 输掉游戏 。
     * 如果不满足上一条，且移除后没有任何剩余的石子，那么 Bob 将会直接获胜（即便是在 Alice 的回合）。
     * 假设两位玩家均采用 最佳 决策。如果 Alice 获胜，返回 true ；如果 Bob 获胜，返回 false 。
     *
     * <p>
     * 示例 1：
     * <p>
     * 输入：stones = [2,1]
     * <p>
     * 输出：true
     * <p>
     * 解释：游戏进行如下：
     * - 回合 1：Alice 可以移除任意一个石子。
     * - 回合 2：Bob 移除剩下的石子。
     * 已移除的石子的值总和为 1 + 2 = 3 且可以被 3 整除。因此，Bob 输，Alice 获胜。
     * <p>
     * 范围
     * <p>
     * 1 <= stones.length <= 10^5
     * 1 <= stones[i] <= 10^4
     */

    /*
    思路：博弈论讨论
    按照石子价值除以3的余数分成三类，并统计相应的数量
    在某个回合开始之前，已经移除的石子总和状态记为x
     Alice 获胜的条件：

    如果类型 0 的石子的个数为偶数，那么 Alice 获胜当且仅当类型 1 和类型 2 的石子至少都有 1 个；

    如果类型 0 的石子的个数为奇数，那么 Alice 获胜当且仅当「在没有类型 0 石子的情况下，Bob 获胜且原因不是因为所有石子都被移除」。
    对应到上面的分析即为「类型 1 的石子比类型 22多超过 22个」或者「类型 2 的石子比类型 1 多超过 2 个」
     */
    public boolean stoneGameIX(int[] stones) {
        int[] cnts = new int[3];
        for (int stone : stones) {
            cnts[stone % 3]++;
        }
        return cnts[0] % 2 == 0 ? !(cnts[1] == 0 || cnts[2] == 0) : !(Math.abs(cnts[1] - cnts[2]) <= 2);
    }

}

package chp5;

/**
 * @author WuChao
 * @since 2021/5/9 下午12:26
 */
public class _8 {
    /**
     * 程序员面试金典(version 6) - 面试题 05.08. 绘制直线
     * 难度: medium
     * <p>
     * 绘制直线。有个单色屏幕存储在一个一维数组中，使得32个连续像素可以存放在一个 int 里。
     * 屏幕宽度为w，且w可被32整除（即一个 int 不会分布在两行上），屏幕高度可由数组长度及屏幕宽度推算得出。
     * 请实现一个函数，绘制从点(x1, y)到点(x2, y)的水平线。
     * <p>
     * 给出数组的长度 length，宽度 w（以比特为单位）、直线开始位置 x1（比特为单位）、直线结束位置 x2（比特为单位）、直线所在行数y。
     * 返回绘制过后的数组。
     *
     *
     * <p>
     * 示例:
     * 输入：length = 1, w = 32, x1 = 30, x2 = 31, y = 0
     * 输出：[3]
     * 说明：在第0行的第30位到第31为画一条直线，屏幕表示为[0b000000000000000000000000000000011]
     *
     * <p>
     * 输入：length = 3, w = 96, x1 = 0, x2 = 95, y = 0
     * 输出：[-1, -1, -1]
     *
     * <p>
     * 数据范围：
     */

    /*
    题意解析：
    首先弄清题意:题目意思是把一个二维数组展开，按行拼接成一个一维数组。
    原先二维数组中一行的元素个数为w/32,二维矩阵所有元素个数是length, 现在给你行号和行的每个数的二进制位，要你求展开后的一维数组。

    举个例子：比如 length = 6, w = 96, x1 = 1, x2 = 31, y = 1
    原二维矩阵中每行元素个数即列数：w / 32 = 3
    原二维矩阵高: length / (w / 32) = 2
    y = 1，即第二行，x1=1, x2=31,第一个数的二进制位中1~31全1，第二第三个数二进制位全0。
    显然对于 x1 <=i <= x2x1<=i<=x2 我们可以通过 i / 32 来判断这个二进制位属于这一行中的第几数例如 i = 32，32 / 32 = 1，
    即这个二进制位属于这一行中的第二个数，再加上偏移量 (w / 32) * y即可得到该行在展开后的一维数组中的位置 ，
    因为我们从小到大遍历，所以计算的数的二进制位每次加的是(1 << (31 - (i % 32))) (最高位先访问)。
     */

    public int[] drawLine(int length, int w, int x1, int x2, int y) {
        int[] res = new int[length];
        for (int i = x1, width = w / 32; i <= x2; i++) {
            res[width * y + (i / 32)] |= (1 << (31 - (i % 32)));
        }
        return res;
    }


}
